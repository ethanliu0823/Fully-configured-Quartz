<?xml version="1.0" encoding="utf-8" ?>
<task>
  <name>DevAutoProcess</name>
  <items>
    <item>
      <description>开发商自动处理微信下行推送_15日后</description>
      <!--发送消息模板ID 不配置不发; priority属性，可以不设置，设置后优先推送值小的信息类型，最小的无法推送则推送第二小，以此类推-->
      <message-template-id>
        <sms priority="2">715</sms>
        <email></email>
        <wechat priority="1">711</wechat>
        <wechat-custom></wechat-custom>
        <wechat-custom-news></wechat-custom-news>
      </message-template-id>
      <content>
        <!--发送范围SQL部分,只有一个-->
        <sql-item id="scope" type="scope">
          <!--必需字段说明：【user_id】； 【SMS节点有值时 mobile字段必需】； 【email 节点有值时 mail字段必需】； 【wechat节点有值时 openid必需有值】-->
          <sql>
            <![CDATA[
                  select u.user_id, u.name,w.openid,bcr.mobile, i.name as category_name,
                  count(i.item_id) as recruit_cnt,count(DISTINCT supplier_id) as supp_cnt 
                  from b2b_bidding.bid_recruit_item i
                  inner join b2b_bidding.bid_recruit_item_register r on i.item_id=r.item_id 
                  inner join b2b_user.uuc_user u on i.user_id=u.user_id and u.user_biz_type=2
                  left join b2b_user_business.business_card_record bcr on u.user_id=bcr.user_id 
                  left join 
                  (
	                  SELECT wxa.userid,wxa.openid FROM	m_yct.m_wx2ycguser wxa 
	                  INNER join m_yct.zq_user zqu on wxa.openid=zqu.openid 
	                  WHERE zqu.appid=@appId
                  ) w on u.user_id=w.userid
                  where date(i.create_time) <date('2016-01-01') and i.register_end_date<now() and date(now())=date('2016-11-10') and r.`storage`=0
                  GROUP BY i.user_id

            ]]>
          </sql>
          <description>开发商自动处理微信下行推送_15日后</description>
          <!--SQL参数-->
          <sql-parameters>
            <parameter>
              <key>@appId</key>
              <value source="system">APPID</value>
            </parameter>
          </sql-parameters>
          <!--模板参数-->
          <content-parameters>
            <parameter>
              <key>#会员姓名#</key>
              <value source="entity">name</value>
            </parameter>
            <parameter>
              <key>#招募分类#</key>
              <value source="entity">category_name</value>
            </parameter>
            <parameter>
              <key>#招募数#</key>
              <value source="entity">recruit_cnt</value>
            </parameter>
            <parameter>
              <key>#未处理供应商家数#</key>
              <value source="entity">supp_cnt</value>
            </parameter>
          </content-parameters>
        </sql-item>
        <!--发送内容SQL部分-->
      </content>
    </item>
    <item>
      <description>开发商自动处理微信下行推送_7日后</description>
      <!--发送消息模板ID 不配置不发; priority属性，可以不设置，设置后优先推送值小的信息类型，最小的无法推送则推送第二小，以此类推-->
      <message-template-id>
        <sms priority="2">716</sms>
        <email></email>
        <wechat priority="1">712</wechat>
        <wechat-custom></wechat-custom>
        <wechat-custom-news></wechat-custom-news>
      </message-template-id>
      <content>
        <!--发送范围SQL部分,只有一个-->
        <sql-item id="scope" type="scope">
          <!--必需字段说明：【user_id】； 【SMS节点有值时 mobile字段必需】； 【email 节点有值时 mail字段必需】； 【wechat节点有值时 openid必需有值】-->
          <sql>
            <![CDATA[
                  select u.user_id, u.name,w.openid,bcr.mobile, i.name as category_name,
                  count(i.item_id) as recruit_cnt,count(DISTINCT supplier_id) as supp_cnt 
                  from b2b_bidding.bid_recruit_item i
                  inner join b2b_bidding.bid_recruit_item_register r on i.item_id=r.item_id 
                  inner join b2b_user.uuc_user u on i.user_id=u.user_id and u.user_biz_type=2
                  left join b2b_user_business.business_card_record bcr on u.user_id=bcr.user_id 
                  left join 
                  (
	                  SELECT wxa.userid,wxa.openid FROM	m_yct.m_wx2ycguser wxa 
	                  INNER join m_yct.zq_user zqu on wxa.openid=zqu.openid 
	                  WHERE zqu.appid=@appId
                  ) w on u.user_id=w.userid
                  where date(i.create_time) <date('2016-01-01') and i.register_end_date<now() and date(now())=date('2016-11-17') and r.`storage`=0
                  GROUP BY i.user_id

            ]]>
          </sql>
          <description>开发商自动处理微信下行推送_7日后</description>
          <!--SQL参数-->
          <sql-parameters>
            <parameter>
              <key>@appId</key>
              <value source="system">APPID</value>
            </parameter>
          </sql-parameters>
          <!--模板参数-->
          <content-parameters>
            <parameter>
              <key>#会员姓名#</key>
              <value source="entity">name</value>
            </parameter>
            <parameter>
              <key>#招募分类#</key>
              <value source="entity">category_name</value>
            </parameter>
            <parameter>
              <key>#招募数#</key>
              <value source="entity">recruit_cnt</value>
            </parameter>
            <parameter>
              <key>#未处理供应商家数#</key>
              <value source="entity">supp_cnt</value>
            </parameter>
          </content-parameters>
        </sql-item>
        <!--发送内容SQL部分-->
      </content>
    </item>
    <item>
      <description>开发商自动处理微信下行推送_3日后</description>
      <!--发送消息模板ID 不配置不发; priority属性，可以不设置，设置后优先推送值小的信息类型，最小的无法推送则推送第二小，以此类推-->
      <message-template-id>
        <sms priority="2">717</sms>
        <email></email>
        <wechat priority="1">713</wechat>
        <wechat-custom></wechat-custom>
        <wechat-custom-news></wechat-custom-news>
      </message-template-id>
      <content>
        <!--发送范围SQL部分,只有一个-->
        <sql-item id="scope" type="scope">
          <!--必需字段说明：【user_id】； 【SMS节点有值时 mobile字段必需】； 【email 节点有值时 mail字段必需】； 【wechat节点有值时 openid必需有值】-->
          <sql>
            <![CDATA[
                  select u.user_id, u.name,w.openid,bcr.mobile, i.name as category_name,
                  count(i.item_id) as recruit_cnt,count(DISTINCT supplier_id) as supp_cnt 
                  from b2b_bidding.bid_recruit_item i
                  inner join b2b_bidding.bid_recruit_item_register r on i.item_id=r.item_id 
                  inner join b2b_user.uuc_user u on i.user_id=u.user_id and u.user_biz_type=2
                  left join b2b_user_business.business_card_record bcr on u.user_id=bcr.user_id 
                  left join 
                  (
	                  SELECT wxa.userid,wxa.openid FROM	m_yct.m_wx2ycguser wxa 
	                  INNER join m_yct.zq_user zqu on wxa.openid=zqu.openid 
	                  WHERE zqu.appid=@appId
                  ) w on u.user_id=w.userid
                  where date(i.create_time) <date('2016-01-01') and i.register_end_date<now() and date(now())=date('2016-11-22') and r.`storage`=0
                  GROUP BY i.user_id

            ]]>
          </sql>
          <description>开发商自动处理微信下行推送_3日后</description>
          <!--SQL参数-->
          <sql-parameters>
            <parameter>
              <key>@appId</key>
              <value source="system">APPID</value>
            </parameter>
          </sql-parameters>
          <!--模板参数-->
          <content-parameters>
            <parameter>
              <key>#会员姓名#</key>
              <value source="entity">name</value>
            </parameter>
            <parameter>
              <key>#招募分类#</key>
              <value source="entity">category_name</value>
            </parameter>
            <parameter>
              <key>#招募数#</key>
              <value source="entity">recruit_cnt</value>
            </parameter>
            <parameter>
              <key>#未处理供应商家数#</key>
              <value source="entity">supp_cnt</value>
            </parameter>
          </content-parameters>
        </sql-item>
        <!--发送内容SQL部分-->
      </content>
    </item>
    <item>
      <description>开发商自动处理微信下行推送_1日后</description>
      <!--发送消息模板ID 不配置不发; priority属性，可以不设置，设置后优先推送值小的信息类型，最小的无法推送则推送第二小，以此类推-->
      <message-template-id>
        <sms priority="2">718</sms>
        <email></email>
        <wechat priority="1">714</wechat>
        <wechat-custom></wechat-custom>
        <wechat-custom-news></wechat-custom-news>
      </message-template-id>
      <content>
        <!--发送范围SQL部分,只有一个-->
        <sql-item id="scope" type="scope">
          <!--必需字段说明：【user_id】； 【SMS节点有值时 mobile字段必需】； 【email 节点有值时 mail字段必需】； 【wechat节点有值时 openid必需有值】-->
          <sql>
            <![CDATA[
                  select u.user_id, u.name,w.openid,bcr.mobile, i.name as category_name,
                  count(i.item_id) as recruit_cnt,count(DISTINCT supplier_id) as supp_cnt 
                  from b2b_bidding.bid_recruit_item i
                  inner join b2b_bidding.bid_recruit_item_register r on i.item_id=r.item_id 
                  inner join b2b_user.uuc_user u on i.user_id=u.user_id and u.user_biz_type=2
                  left join b2b_user_business.business_card_record bcr on u.user_id=bcr.user_id 
                  left join 
                  (
	                  SELECT wxa.userid,wxa.openid FROM	m_yct.m_wx2ycguser wxa 
	                  INNER join m_yct.zq_user zqu on wxa.openid=zqu.openid 
	                  WHERE zqu.appid=@appId
                  ) w on u.user_id=w.userid
                  where date(i.create_time) <date('2016-01-01') and i.register_end_date<now() and date(now())=date('2016-11-24') and r.`storage`=0
                  GROUP BY i.user_id

            ]]>
          </sql>
          <description>开发商自动处理微信下行推送_1日后</description>
          <!--SQL参数-->
          <sql-parameters>
            <parameter>
              <key>@appId</key>
              <value source="system">APPID</value>
            </parameter>
          </sql-parameters>
          <!--模板参数-->
          <content-parameters>
            <parameter>
              <key>#会员姓名#</key>
              <value source="entity">name</value>
            </parameter>
            <parameter>
              <key>#招募分类#</key>
              <value source="entity">category_name</value>
            </parameter>
            <parameter>
              <key>#招募数#</key>
              <value source="entity">recruit_cnt</value>
            </parameter>
            <parameter>
              <key>#未处理供应商家数#</key>
              <value source="entity">supp_cnt</value>
            </parameter>
          </content-parameters>
        </sql-item>
        <!--发送内容SQL部分-->
      </content>
    </item>
  </items>
</task>