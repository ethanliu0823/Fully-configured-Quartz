<?xml version="1.0" encoding="utf-8" ?>
<task>
  <name>CertifiedAHalfHour</name>
  <items>
    <item>
      <description>供应商用户认证半小时</description>
      <!--发送消息模板ID 不配置不发; priority属性，可以不设置，设置后优先推送值小的信息类型，最小的无法推送则推送第二小，以此类推-->
      <message-template-id>
        <sms></sms>
        <email></email>
        <wechat>666</wechat>
      </message-template-id>
      <content>
        <!--发送范围SQL部分,只有一个-->
        <sql-item id="scope" type="scope">
          <!--必需字段说明：【user_id】； 【SMS节点有值时 mobile字段必需】； 【email 节点有值时 mail字段必需】； 【wechat节点有值时 openid必需有值】-->
          <sql>
            <![CDATA[
                select u.user_id,if(ifnull(u.name,'')='','会员',u.name) as name,wxa.openid,r.company_id as supplier_id,ocx1.user_name as consultant_name,ocx1.wx_code as consultant_wechat
                from b2b_user.uuc_user u 
                inner join b2b_user.uuc_user_identity r on u.user_id=r.user_id
                inner join b2b_user_business.business_card_record bcr on u.user_id=bcr.user_id
                inner join b2b_company.uuc_supplier_basic b on r.company_id=b.supplier_id 
                inner join m_yct.m_wx2ycguser wxa on u.user_id=wxa.userid
                inner join m_yct.zq_user zqu on wxa.openid=zqu.openid 
                inner join b2b_parameter.bizp_area ba1 on b.province_code=ba1.item_code
                inner join b2b_parameter.bizp_area ba2 on b.city_code=ba2.item_code
                inner join dotnet_operation.op_connect_wxinfo ocx1 on (FIND_IN_SET(ba1.item_name,ocx1.respon_areas) or FIND_IN_SET(ba2.item_name,ocx1.respon_areas)) AND ocx1.business_type=0 
                where u.user_biz_type=1 and u.`name` not like 'test%' AND b.company_name not like 'test%'
                AND r.created_time BETWEEN DATE_ADD(now(),INTERVAL -60 MINUTE) and DATE_ADD(now(),INTERVAL -30 MINUTE)
                and zqu.appid=@appId
            ]]>
          </sql>
          <description>供应商用户认证半小时</description>
          <!--SQL参数-->
          <sql-parameters>
            <parameter>
              <key>@appid</key>
              <value source="system">APPID</value>
            </parameter>
          </sql-parameters>
          <!--模板参数-->
          <content-parameters>
            <parameter>
              <key>#会员姓名#</key>
              <value source="entity">name</value>
            </parameter>
            <parameter>
              <key>#运营经理姓名#</key>
              <value source="entity">consultant_name</value>
            </parameter>
            <parameter>
              <key>#运营经理微信号#</key>
              <value source="entity">consultant_wechat</value>
            </parameter>
          </content-parameters>
        </sql-item>
        <!--发送内容SQL部分-->
        <sql-item id="sql_1" type="content">
          <sql>
            <![CDATA[
						SELECT
                b.uid as itemId,
                CONCAT(ifnull(c.short_name,c.company_name),d.category_name,'招标公告')  as title,
								d.category_name,
                ifnull(c.short_name,c.company_name) as company_name,
                c.developer_type as developerType,
                1 as type,b.created_time,
								CONCAT('https://m.QuartzExt.com/bidding/detail-',b.uid,'.html') as url
                FROM
                b2b_op_activity.op_fit_my_bidding a
                INNER JOIN 
                b2b_bidding.bid_announcements b ON a.item_id = b.uid
                left join 
                (
		                select bid_announcement_uid as item_id from b2b_bidding.bid_announcements_register where supplier_id = @supplier_id
                ) r on a.item_id=r.item_id
                INNER JOIN b2b_company.uuc_developer c ON b.developer_uid = c.developer_id
								inner join b2b_bidding.bid_announcement_categories cc on b.uid=cc.bid_announcement_uid 
								INNER JOIN b2b_parameter.bsp_basic_forest d on cc.category_code=d.category_code
                WHERE
                a.supplier_id = @supplier_id and b.register_end_date>now()
                AND c.company_name not like 'test_%' and r.item_id is null and b.procurement_type=0
								GROUP BY b.uid

                union all

                SELECT DISTINCT
                b.item_id as itemId,
                CONCAT(ifnull(c.short_name,c.company_name),d.category_name,'招募公告') as title ,
								d.category_name,
                ifnull(c.short_name,c.company_name) as company_name,
                c.developer_type AS developerType,
                2 as type,b.create_time,
								CONCAT('https://m.QuartzExt.com/zm/detail-',b.item_id,'.html') as url
                FROM
                b2b_op_activity.op_fit_my_recruit a
                INNER JOIN 
                b2b_bidding.bid_recruit_item b ON a.item_id = b.item_id
                left join 
                (
	                select item_id from b2b_bidding.bid_recruit_item_register where supplier_id = @supplier_id
                ) r on b.item_id=r.item_id
                INNER JOIN b2b_company.uuc_developer c ON b.company_id = c.developer_id
								INNER JOIN b2b_parameter.bsp_basic_forest d on b.categories=d.category_code								
                WHERE 
                a.supplier_id = @supplier_id and a.is_complete_meet=1 and r.item_id is null and b.register_end_date>now()
                AND c.company_name not like 'test_%' GROUP BY b.item_id 

								union ALL

                SELECT DISTINCT
                b.item_id as itemId,
                CONCAT(ifnull(c.short_name,c.company_name),d.category_name,'招募公告') as title ,
								d.category_name,
                ifnull(c.short_name,c.company_name) as company_name,
                c.developer_type AS developerType,
                3 as type,b.create_time,
								CONCAT('https://m.QuartzExt.com/zm/detail-',b.item_id,'.html') as url
                FROM
                b2b_op_activity.op_fit_my_recruit a
                INNER JOIN 
                b2b_bidding.bid_recruit_item b ON a.item_id = b.item_id
                left join 
                (
	                select item_id from b2b_bidding.bid_recruit_item_register where supplier_id = @supplier_id
                ) r on b.item_id=r.item_id
								left JOIN
								(
										select item_id,count(supplier_id) as cnt from b2b_bidding.bid_recruit_item_register
								)rc on b.item_id=rc.item_id
                INNER JOIN b2b_company.uuc_developer c ON b.company_id = c.developer_id
								INNER JOIN b2b_parameter.bsp_basic_forest d on b.categories=d.category_code
								
                WHERE a.is_complete_meet=0 and IFNULL(rc.cnt,0)<30 and
                a.supplier_id = @supplier_id  and r.item_id is null and b.register_end_date>now()
                AND c.company_name not like 'test_%' GROUP BY b.item_id 
LIMIT 1
             ]]>
          </sql>
          <description></description>
          <!--SQL参数： value为source="entity"时scope中的字段或source="system"的系统配置值，格式为【Value】-->
          <sql-parameters>
            <parameter>
              <key>@supplier_id</key>
              <value source="entity">supplier_id</value>
            </parameter>
          </sql-parameters>
          <!--内容参数： value为本SQL中的字段或sourcr="system"的系统配置值，格式为【Value】-->
          <content-parameters>
            <parameter>
              <key>#商机名称#</key>
              <value source="entity">title</value>
            </parameter>
            <parameter>
              <key>#采购类别#</key>
              <value source="entity">category_name</value>
            </parameter>
            <parameter>
              <key>#开发商名称#</key>
              <value source="entity">company_name</value>
            </parameter>
            <parameter>
              <key>#商机详情页URL#</key>
              <value source="entity">url</value>
            </parameter>
          </content-parameters>
        </sql-item>
      </content>
    </item>
  </items>
</task>